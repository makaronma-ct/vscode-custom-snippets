{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print to console": {
		"prefix": "uselog",
		"body": [
      "useEffect(() => {",
      "  console.log($1);",
      "}, [$1]);",
		],
		"description": "Log output to console"
	},
	"Print to console with title": {
		"prefix": "usellg",
		"body": [
      "useEffect(() => {",
      "  console.log(`${$1}: $1`);",
      "}, [$1]);",
		],
		"description": "Log output to console"
	},
  "useEffect Real":{
    "prefix": "usee",
    "body": [
      "useEffect(() => {",
      "  ",
      "}, []);",
    ],
    "description": "useEffect"
  },
  "Nextjs Component with children prop":{
    "prefix": "nawe",
    "body": [
      "import React from \"react\";",
      "",
      "interface ${TM_FILENAME_BASE}Props{",
      " children: React.ReactNode;",
      "}",
      "const ${TM_FILENAME_BASE} = (props: ${TM_FILENAME_BASE}Props) => {",
      "  const { children } = props;",
      "  return (",
      "    <div className=\"\">",
      "      {children}",
      "    </div>",
      "  );",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};",
    ],
    "description": "nawe"
  },
  "export default":{
    "prefix": "edd",
    "body": [
      "export default ${TM_FILENAME_BASE};",
      "",
    ],
    "description": "nawe"
  },
  "react native component props":{
    "prefix": "rpp",
    "body": [
      "interface ${TM_FILENAME_BASE}Props {",
      "",
      "}",
    ],
    "description": "nawe"
  },
  "console.log()":{
    "prefix": "cg",
    "body": [
      "console.log($1);"
    ],
    "description": "log"
  },
  "React.useState()":{
    "prefix": "uses",
    "body": [
      "const [$1, set${1/(.*)/${1:/capitalize}/}] = useState<$2>($3);"
    ],
    "description": "use state with type"
  },
  "<View> with twStyles":{
    "prefix": "twview",
    "body": [
      "<View style={twStyles.$1}>",
      "" ,
      "</View>"
    ],
    "description": "<View> with twStyles"
  },
  "jsdoc":{
    "prefix": "doc",
    "body": [
      "/**",
      " * ",
      " *  ",
      " */",
    ],
    "description": "<View> with twStyles"
  },
}